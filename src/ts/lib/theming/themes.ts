import { injectCSS } from "../core/helpers";

/**
 * Return ready CSS code.
 * @param themeName name of theme
 * @returns 
 */
export function generateCSSCode(themeObject: Theme){
    let cssCode = `
/* generated by src/ts/lib/themes.ts generateCSSCode() function */
    `;
        
    const elements = Object.keys(themeObject);

    elements.forEach((element: string) => {
        const selector = themeObject[element].selector;
        const properties:string = [...Object.keys(themeObject[element].properties)]
                                        .map((property:string) => {
                                            return `${property}: ${themeObject[element].properties[property]};\n`
                                        })
                                        .join('');
        

        cssCode += `\n${selector} {
    ${properties}}\n`;
    });
    
    return cssCode;
}



/**
 * Creates or updates json2html style node.
 * @param themeName name of theme
 */
export function updateThemeCSS(cssCode: string, dataMarker: string){
    // Checks if style tag already exists
    const themeCSS = document.head.querySelector(dataMarker); //'[data-style-origin="json2html"]'

    // if exist
    if(themeCSS){
        // just update
        themeCSS.innerHTML = cssCode;
    } else {
        // else create and insert style tag
        injectCSS(cssCode, dataMarker);
    }
}



/**
 * Updates theme using Theme object
 * @param themeObject special Theme object
 */
export function useTheme(themeObject: Theme){
    const cssCode = generateCSSCode(themeObject);

    // for saving info about source
    const dataMarker = '[data-style-origin="json2html-theme-style"]';

    updateThemeCSS(cssCode, dataMarker);
}